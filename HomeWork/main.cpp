//---------------------------------------------------------------------------
// File: main.cpp
// By:   HeliSRaiN 
//       SnipGhost  
//                                                        Главный файл работы
//---------------------------------------------------------------------------
#include "packcage.h"  // Содержит все необходимые библиотеки и функции
#include "interface.h" // Содержит расширенный графический интерфейс
//---------------------------------------------------------------------------
//#include "../Personal/mywork.h" // Для выполнения индивидуального задания
//---------------------------------------------------------------------------
using namespace std;
//---------------------------------------------------------------------------
int main()
{
	system("chcp 1251 > nul");

	//menuRun(); //Визуализированное меню

	Text *text = getText(inputText()); // Вводим текст
	if (text == NULL)                  // Проверяем его
	{
		cout << "Ошибка ввода текста" << endl;
		return 0;
	}

	//doMyHomeWork(text); // Функция выполнения домашнего задания

	for (int i = 0; i < text->size; ++i) // Проходимся по предложениям
	{
		Sentence *s = text->sent[i];     // Для удобства создаем синоним
		if (s == NULL) continue;         // Пропускаем "битые" предложения
		cout << "\nПредложение #" << i << " " << s << endl;
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		for (int j = 0; j < s->size; ++j) // Проходимся по словам
		{
			Word *w = s->word[j];         // Снова создаем синоним
			if (w == NULL) continue;      // Пропускаем "битые" слова
			cout << "\tСлово #" << j << " " << *w << endl;
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			if (DEBUG) // Дополнительная информация о слове
			{
				cout << "\t\tАтрибут = ";
				cout << ((w->attr) ? ((char)w->attr) : ('0'));
				cout << "\tФ.О.Н. = " << ((w->flag) ? "true" : "false");
				cout << endl;
			}
			// Закончили со словом, двигаемся дальше пока все не выведем
		}
	}

	say("Завершение работы ..."); // Ну и дичь
	delete text;                  // Не забываем (!) очистить память (!)
	return 0;
}
//---------------------------------------------------------------------------