//---------------------------------------------------------------------------
// File: packcage.cpp
// By:   SnipGhost
//                                                         Библиотека функций
//---------------------------------------------------------------------------
#include "packcage.h"
//---------------------------------------------------------------------------
// Ввод и проверка текста
//---------------------------------------------------------------------------
char* inputText(istream &input)
{
	char *text = "Bond. James Bond. And, it is a good day to kill you";
	return NULL;
}
//---------------------------------------------------------------------------
// Формирование текста
//---------------------------------------------------------------------------
Text* getText(const char *txt)
{
	if (txt == NULL) return NULL;
	Text *text = new Text;
	// TODO: Посчитать text->size
	text->sent = new Sentence *[text->size];
	// TODO: В цикле делить txt на предложения с помощью strtok_s.
	//       Для каждого нового token вызывать getSentence(token),
	//       где char *token - одно предложение
	return text;
}
//---------------------------------------------------------------------------
Text::~Text()
{
	// TODO: Очистить каждое предложение от 0 до size-1
	if (DEBUG) cout << "Текст удален" << endl;
}
//---------------------------------------------------------------------------
// Формирование педложения
//---------------------------------------------------------------------------
Sentence* getSentence(const char *txt)
{
	if (txt == NULL) return NULL;
	Sentence *sent = new Sentence;
	// TODO: Посчитать sent->size
	sent->word = new Word *[sent->size];
	// TODO: В цикле делить txt на слова с помощью strtok_s.
	//       Для каждого нового token вызывать getWord(token),
	//       где char *token - одно слово
	return sent;
}
//---------------------------------------------------------------------------
Sentence::~Sentence()
{
	// TODO: Очистить каждое слово от 0 до size-1
	if (DEBUG) cout << "Предложение удалено" << endl;
}
//---------------------------------------------------------------------------
// Формирование слова
//---------------------------------------------------------------------------
Word* getWord(const char *txt)
{
	if (txt == NULL) return NULL;
	Word *word = new Word;
	// TODO: Произвести глубокое копирование txt в symbols
	word->symbols = NULL; // TODO: заменить с использованием strcpy(...)
	return word;
}
//---------------------------------------------------------------------------
Word::~Word()
{
	// TODO: очистить char *symbols
	if (DEBUG) cout << "Слово удалено" << endl;
}
//---------------------------------------------------------------------------
// Вспомогательная функция вывода
//---------------------------------------------------------------------------
void say(const char *msg)
{
	cout << msg << endl;
}
//---------------------------------------------------------------------------